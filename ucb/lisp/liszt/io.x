(File io.l)
(d-printdocstuff lambda cdr car null do quote status concat terpr patom sfilewrite)
(e-write5 lambda e-docomment e-cvtas * list quote e-write3 setq let em-checknpdrop patom sfilewrite cond If em-checkskip)
(e-write4 lambda e-docomment e-cvtas * list quote e-write3 setq let em-checknpdrop patom sfilewrite cond If em-checkskip)
(e-write3 lambda e-docomment e-cvtas * list quote e-write3 setq let em-checknpdrop patom sfilewrite cond If em-checkskip)
(e-write2 lambda e-docomment e-cvtas * list quote e-write3 setq let em-checknpdrop patom sfilewrite cond If em-checkskip)
(e-write1 lambda e-docomment * list quote e-write3 setq let em-checknpdrop patom sfilewrite cond If em-checkskip)
(e-writel lambda e-docomment patom sfilewrite * list quote e-write3 let cond If em-checknpdrop setq)
(e-return lambda quote e-write1 setq)
(e-jump lambda e-write2 * list quote e-write3 setq let cond If em-checknpdrop)
(e-dropnp lambda cdr + setq not cond If)
(e-unshallowbind lambda list e-write4 |1+| + * cons quote e-write3 greaterp do e-setupbind)
(e-shallowbind lambda d-move cdr append cons e-cvt quote e-write3 d-loclit let)
(e-unsetupbind lambda quote e-write3)
(e-setupbind lambda quote e-write3)
(e-tst lambda quote e-write2)
(e-pushnil lambda |1-| equal - setq quote e-write2 greaterp cond If bigp not cdr null and zerop do)
(e-pop lambda e-dropnp greaterp cond If)
(e-move lambda e-write3 quote e-write2 equal cond If)
(e-label lambda e-writel setq)
(e-gotot lambda e-write2)
(e-gotonil lambda e-write2)
(e-goto lambda e-jump)
(e-docomment lambda setq terpr cdr eq tyo car exploden quote patom sfilewrite null nreverse do cond If)
(e-cmp lambda quote e-write3)
(e-cvtas lambda + concat numberp cdr caddr list setq cadr car quote eq patom sfilewrite atom cond If)
(e-uncvt lambda list or |1-| cdr setq cadr equal and do car quote eq atom cond If)
(e-cvt lambda comp-warn *throw throw |1+| terpri or niceprint patom comp-msg progn comp-err list cadr |1-| cdr * cons car dtpr atom d-loclit e-cvt setq quote eq cond If)
(d-printautorun lambda concat patom sfilewrite)
(d-asciiout lambda |1-| or eq difference ascii concat min quote patom sfilewrite greaterp cond If bigp not cdr and zerop length car explode setq null do)
(d-bindtab lambda caddr cadr eq cons liszt-internal-do mapcar d-asciiout e-write1 *throw throw |1+| terpri car niceprint patom comp-msg progn comp-err assoc cdr quote caar memq cond If null nreverse do length e-write2 e-writel setq)
(d-fini lambda e-return e-write1 quote e-write3 cond If)
(d-prelude lambda e-write4 eq e-write2 e-writel cdr * cons quote e-write3 cond If)
