(File funa.l)
(cc-cxxr lambda d-inreg d-allocreg cons e-cvt not cddr append list e-tst d-movespec do eq or dtpr d-exp let d-simple caddr cadr car d-bestreg setq symbolp and return e-goto cdr d-handlecc quote d-move null cond If prog)
(d-superrplacx lambda |1-| decr cdr unpush |1+| incr cons Push d-clearreg e-cvt e-write3 d-structgen d-exp d-move d-semisimple and d-simple not eq or d-fixnumexp quote list setq fixp cond If cadddr caddr cadr let)
(c-rplacx lambda quote d-superrplacx)
(d-structgen lambda cons cdr * setq d-clearreg atom not cadr list e-cvt append quote d-move car eq dtpr and cond If)
(d-semisimple lambda caadadr cadadr caadr cadr car quote eq dtpr and d-simple or)
(d-supercxr lambda d-handlecc e-cvt e-goto car d-clearreg e-write2 e-write3 d-structgen d-exp d-move d-semisimple eq and d-simple not d-fixnumexp quote list setq fixp cond If caddr cadr let)
(cc-cxr lambda d-supercxr)
(c-cons lambda d-clearreg - cddr setq quote e-write2 cdr d-pushargs)
(c-cond lambda d-clearreg e-goto copy d-exps equal eq caar d-exp and let cdar *throw throw |1+| terpri niceprint patom comp-msg progn comp-err car atom e-label d-move If null or d-genlab cdr do quote cons setq cond makecomment)
(d-popframe lambda cdr + list e-write4 cons quote e-write3)
(d-pushframe lambda cons setq Push e-write3 concat e-cvt quote e-write2)
(c-*catch lambda d-clearreg cdr unpush d-popframe caddr e-label e-write3 e-write2 cons setq Push d-pushframe cadr d-exp d-genlab quote let)
(d-boolexlate lambda list cons setq makecomment cadddr caddr d-boolexlate let cadr fixp car quote eq and atom cond If)
(d-booleexpand lambda cddddr append cadddr caddr list cadr cons d-booleexpand =& = *throw throw |1+| setq terpri niceprint patom comp-msg progn comp-err length cdr <& < car quote eq dtpr and cond If)
(c-boole lambda d-exp let cdr d-callbig car quote eq d-booleexpand d-boolexlate setq cadr fixp cond)
(cc-bigp lambda quote cadr d-typesimp)
(cc-bcdp lambda quote cadr d-typesimp)
(c-bcdcall lambda cdr d-callbig)
(cc-atom lambda quote cadr d-typecmplx)
(cm-assq lambda caddr cadr list quote cons)
(c-assembler-code lambda car e-write1 null cdr do quote cons cond makecomment setq)
(cc-arg lambda e-label d-exp cons e-goto =& = null d-handlecc e-tst d-clearreg quote list d-move greaterp fixp or cadr car cdr length and *throw throw |1+| setq terpri niceprint patom comp-msg progn comp-err eq not cond If d-genlab let)
(cc-and lambda d-clearreg d-move e-label e-goto setq car cons do d-exp null quote cdr cond If d-genlab let)
